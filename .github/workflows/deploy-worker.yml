name: Deploy Cloudflare Worker

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show repo + wrangler.toml (for debugging)
        run: |
          pwd
          ls -la
          echo "----- wrangler.toml -----"
          cat wrangler.toml || true
          echo "-------------------------"

      - name: Install Wrangler (v4)
        run: |
          npm i -g wrangler@4
          wrangler --version

      # Masked diagnostics to prove the secrets reached the runner
      - name: Sanity check (masked)
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          # Mask the token so it never appears in plain text logs
          echo "::add-mask::$CLOUDFLARE_API_TOKEN"

          # Safely print first 6 and last 4 chars to confirm presence
          if [ -n "$CLOUDFLARE_API_TOKEN" ]; then
            START=$(echo -n "$CLOUDFLARE_API_TOKEN" | head -c 6)
            END=$(echo -n "$CLOUDFLARE_API_TOKEN" | tail -c 4)
            echo "Token present: ${START}...${END}"
          else
            echo "Token missing! Add CLOUDFLARE_API_TOKEN to GitHub repo secrets." && exit 1
          fi

          if [ -n "$CLOUDFLARE_ACCOUNT_ID" ]; then
            echo "Account (if provided): ${CLOUDFLARE_ACCOUNT_ID}"
          else
            echo "Account ID not provided via secret (ok if itâ€™s in wrangler.toml)."
          fi

      - name: Wrangler whoami (CLI)
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          # whoami validates the token; failure here usually means bad/expired token
          wrangler whoami

      - name: Publish via CLI
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          wrangler publish --config wrangler.toml
